{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_total_supply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSummary",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/OptionExchange.sol"
  },
  "ast": {
    "absolutePath": "contracts/OptionExchange.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        508
      ],
      "ERC20": [
        1076
      ],
      "LinkTokenInterface": [
        601
      ],
      "OptionExchange": [
        464
      ],
      "OptionExchangeFactory": [
        43
      ],
      "SafeMath": [
        794
      ]
    },
    "id": 1077,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          464
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 43,
        "linearizedBaseContracts": [
          43
        ],
        "name": "OptionExchangeFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "deployedOptions",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 43,
            "src": "63:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "63:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "63:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "302:201:0",
              "statements": [
                {
                  "assignments": [
                    12
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12,
                      "mutability": "mutable",
                      "name": "newOption",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 32,
                      "src": "312:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptionExchange_$464",
                        "typeString": "contract OptionExchange"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 11,
                        "name": "OptionExchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 464,
                        "src": "312:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionExchange_$464",
                          "typeString": "contract OptionExchange"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "358:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "358:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "307844393245373133643035314333374562423235363138303361336235464241626334393632343331",
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "369:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xD92E713d051C37EbB2561803a3b5FBAbc4962431"
                      },
                      {
                        "argumentTypes": null,
                        "id": 18,
                        "name": "_sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "412:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "sellTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "423:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "55534454",
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "439:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                          "typeString": "literal_string \"USDT\""
                        },
                        "value": "USDT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                          "typeString": "literal_string \"USDT\""
                        }
                      ],
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "339:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_OptionExchange_$464_$",
                        "typeString": "function (address,address,address,string memory,string memory) returns (contract OptionExchange)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 13,
                        "name": "OptionExchange",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 464,
                        "src": "343:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionExchange_$464",
                          "typeString": "contract OptionExchange"
                        }
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptionExchange_$464",
                      "typeString": "contract OptionExchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "312:134:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "newOption",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "485:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionExchange_$464",
                              "typeString": "contract OptionExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionExchange_$464",
                              "typeString": "contract OptionExchange"
                            }
                          ],
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "477:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "477:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "477:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "deployedOptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "456:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "456:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "456:40:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dd0fd82d",
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "_sellToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 33,
                  "src": "159:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "159:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "sellTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 33,
                  "src": "216:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "120:174:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:0:0"
            },
            "scope": 43,
            "src": "99:404:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "590:39:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "name": "deployedOptions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4,
                    "src": "607:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 38,
                  "id": 40,
                  "nodeType": "Return",
                  "src": "600:22:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "214fc182",
            "id": 42,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeployedOptions",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:2:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "572:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "572:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "572:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "571:18:0"
            },
            "scope": 43,
            "src": "522:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1077,
        "src": "26:610:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 464,
        "linearizedBaseContracts": [
          464
        ],
        "name": "OptionExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 46,
            "libraryName": {
              "contractScope": null,
              "id": 44,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 794,
              "src": "893:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$794",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "887:24:0",
            "typeName": {
              "id": 45,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "906:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "sellHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "964:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "964:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "buyHash",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "986:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 49,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "986:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "payToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1012:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 51,
              "name": "LinkTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 601,
              "src": "1012:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 54,
            "mutability": "mutable",
            "name": "sellToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1054:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 53,
              "name": "LinkTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 601,
              "src": "1054:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c77b5146",
            "id": 56,
            "mutability": "mutable",
            "name": "payTokenAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1098:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 55,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1098:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c1f7bd3",
            "id": 58,
            "mutability": "mutable",
            "name": "sellTokenAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1134:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 57,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1134:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c99f7571",
            "id": 60,
            "mutability": "mutable",
            "name": "sellTokenSymbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1176:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 59,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1176:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fa52d28c",
            "id": 62,
            "mutability": "mutable",
            "name": "buyTokenSymbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1211:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 61,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1211:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 64,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1246:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 63,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1246:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7b022949",
            "id": 66,
            "mutability": "mutable",
            "name": "exerciseVal",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1272:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 65,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1272:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "mutability": "mutable",
            "name": "contractAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1306:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1306:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "OptionExchange.option",
            "id": 85,
            "members": [
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "strike",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1410:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1410:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "premium",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1508:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1508:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "expiry",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1581:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 73,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1581:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1638:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1638:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "exercised",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1705:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 77,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1705:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "canceled",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1757:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 79,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1757:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "writer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1866:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 81,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1866:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "buyer",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 85,
                "src": "1917:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 83,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1917:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "option",
            "nodeType": "StructDefinition",
            "scope": 464,
            "src": "1386:577:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b6a24b48",
            "id": 87,
            "mutability": "mutable",
            "name": "TokenOpts",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "1973:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_option_$85_storage",
              "typeString": "struct OptionExchange.option"
            },
            "typeName": {
              "contractScope": null,
              "id": 86,
              "name": "option",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 85,
              "src": "1973:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_option_$85_storage_ptr",
                "typeString": "struct OptionExchange.option"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "OptionExchange.State",
            "id": 91,
            "members": [
              {
                "id": 88,
                "name": "Deployed",
                "nodeType": "EnumValue",
                "src": "2019:8:0"
              },
              {
                "id": 89,
                "name": "Available",
                "nodeType": "EnumValue",
                "src": "2029:9:0"
              },
              {
                "id": 90,
                "name": "Sold",
                "nodeType": "EnumValue",
                "src": "2039:4:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "2007:37:0"
          },
          {
            "constant": false,
            "functionSelector": "1ff6bfd4",
            "id": 93,
            "mutability": "mutable",
            "name": "OptionState",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 464,
            "src": "2049:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$91",
              "typeString": "enum OptionExchange.State"
            },
            "typeName": {
              "contractScope": null,
              "id": 92,
              "name": "State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 91,
              "src": "2049:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$91",
                "typeString": "enum OptionExchange.State"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2349:652:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 106,
                      "name": "OptionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2363:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$91",
                        "typeString": "enum OptionExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "2377:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$91_$",
                          "typeString": "type(enum OptionExchange.State)"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Deployed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2377:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$91",
                        "typeString": "enum OptionExchange.State"
                      }
                    },
                    "src": "2363:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$91",
                      "typeString": "enum OptionExchange.State"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "2405:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 112,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "2413:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2405:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "payTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2433:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "_payTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2451:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2433:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 119,
                      "name": "sellTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "2481:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 120,
                      "name": "_sellTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2500:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2481:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "sellTokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2531:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "_sellTokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2549:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2531:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2531:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "buyTokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2579:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 128,
                      "name": "_buyTokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "2596:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2579:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 131,
                      "name": "sellHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2625:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 135,
                              "name": "sellTokenSymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "2663:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 133,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2646:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2646:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2646:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 132,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2636:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2636:44:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2625:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 140,
                      "name": "buyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "2694:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 144,
                              "name": "buyTokenSymbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62,
                              "src": "2731:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2714:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2714:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2714:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 141,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2704:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2704:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2694:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:53:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "payToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2822:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 151,
                          "name": "payTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "2852:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 150,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "2833:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$601_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2833:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2822:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2822:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "sellToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "2882:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 157,
                          "name": "sellTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "2913:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 156,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "2894:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$601_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2894:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2882:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2882:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 161,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2953:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2987:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptionExchange_$464",
                                "typeString": "contract OptionExchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptionExchange_$464",
                                "typeString": "contract OptionExchange"
                              }
                            ],
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2979:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 164,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2979:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2979:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2971:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2971:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2971:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2953:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:40:0"
                }
              ]
            },
            "documentation": null,
            "id": 172,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2169:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_payTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2193:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_sellTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2227:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_sellTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2262:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_buyTokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 172,
                  "src": "2302:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2159:182:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:0:0"
            },
            "scope": 464,
            "src": "2148:853:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "3073:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3091:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3091:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "3104:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3091:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3083:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3083:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3083:27:0"
                },
                {
                  "id": 181,
                  "nodeType": "PlaceholderStatement",
                  "src": "3120:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 183,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3069:2:0"
            },
            "src": "3051:77:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "3275:640:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$91",
                          "typeString": "enum OptionExchange.State"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "OptionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "3293:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$91",
                            "typeString": "enum OptionExchange.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "3308:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$91_$",
                              "typeString": "type(enum OptionExchange.State)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Deployed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3308:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$91",
                            "typeString": "enum OptionExchange.State"
                          }
                        },
                        "src": "3293:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3285:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3285:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:38:0"
                },
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "tokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 266,
                      "src": "3333:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "3354:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "3354:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 212,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "3411:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3130",
                                  "id": 215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3443:2:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 216,
                                  "name": "tokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 204,
                                  "src": "3447:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3443:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 213,
                                "name": "tokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 191,
                                "src": "3427:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 707,
                              "src": "3427:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3427:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 210,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "3392:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 578,
                          "src": "3392:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3392:70:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f727265637420416d6f756e74206f6620546f6b656e20737570706c696564",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3463:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3915291e259ba9f08ca9d502fa7249f386413bd5c63048dd0688dbcb001d87ee",
                          "typeString": "literal_string \"Incorrect Amount of Token supplied\""
                        },
                        "value": "Incorrect Amount of Token supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3915291e259ba9f08ca9d502fa7249f386413bd5c63048dd0688dbcb001d87ee",
                          "typeString": "literal_string \"Incorrect Amount of Token supplied\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3384:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3384:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3384:116:0"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "buyTokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 266,
                      "src": "3647:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3647:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "payToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "3671:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "3671:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3671:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3647:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 229,
                      "name": "TokenOpts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "3700:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_option_$85_storage",
                        "typeString": "struct OptionExchange.option storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3730:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 234,
                                "name": "buyTokenDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "3734:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3730:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 231,
                              "name": "strike",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "3719:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "3719:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3719:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3765:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 240,
                                "name": "buyTokenDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "3769:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3765:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 237,
                              "name": "premium",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "3753:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "3753:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3753:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 243,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "3788:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3812:2:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 247,
                                "name": "tokenDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 204,
                                "src": "3816:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3812:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 244,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "3796:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 707,
                            "src": "3796:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3796:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3832:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3839:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3846:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3846:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3866:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3858:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 254,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3858:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3858:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 230,
                        "name": "option",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "3712:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_option_$85_storage_ptr_$",
                          "typeString": "type(struct OptionExchange.option storage pointer)"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3712:157:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_option_$85_memory_ptr",
                        "typeString": "struct OptionExchange.option memory"
                      }
                    },
                    "src": "3700:169:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_option_$85_storage",
                      "typeString": "struct OptionExchange.option storage ref"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "3700:169:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "OptionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "3879:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$91",
                        "typeString": "enum OptionExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "3893:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$91_$",
                          "typeString": "type(enum OptionExchange.State)"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Available",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3893:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$91",
                        "typeString": "enum OptionExchange.State"
                      }
                    },
                    "src": "3879:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$91",
                      "typeString": "enum OptionExchange.State"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3879:29:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5891a76b",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 194,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 193,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 183,
                  "src": "3257:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3257:9:0"
              }
            ],
            "name": "writeOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "strike",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "3192:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "premium",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "3205:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "3219:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "3232:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3190:59:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:0:0"
            },
            "scope": 464,
            "src": "3170:745:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "3996:258:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$91",
                          "typeString": "enum OptionExchange.State"
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 271,
                          "name": "OptionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "4014:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$91",
                            "typeString": "enum OptionExchange.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 272,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "4028:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$91_$",
                              "typeString": "type(enum OptionExchange.State)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Available",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4028:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$91",
                            "typeString": "enum OptionExchange.State"
                          }
                        },
                        "src": "4014:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4006:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4006:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 280,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4084:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4084:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 282,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "4095:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 283,
                              "name": "TokenOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "4102:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$85_storage",
                                "typeString": "struct OptionExchange.option storage ref"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "premium",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "4102:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "payToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4062:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 600,
                          "src": "4062:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4062:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e636f727265637420616d6f756e74206f6620555344542073656e7420666f72207072656d69756d",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33417af3389b5fd62fb1f766b967c5613c4f4d564d885bca0a7d0355240f1dfe",
                          "typeString": "literal_string \"Incorrect amount of USDT sent for premium\""
                        },
                        "value": "Incorrect amount of USDT sent for premium"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33417af3389b5fd62fb1f766b967c5613c4f4d564d885bca0a7d0355240f1dfe",
                          "typeString": "literal_string \"Incorrect amount of USDT sent for premium\""
                        }
                      ],
                      "id": 277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4054:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4054:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:112:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "TokenOpts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "4176:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$85_storage",
                          "typeString": "struct OptionExchange.option storage ref"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "4176:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4194:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4194:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4176:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 296,
                      "name": "OptionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "4214:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$91",
                        "typeString": "enum OptionExchange.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "4228:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$91_$",
                          "typeString": "type(enum OptionExchange.State)"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Sold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4228:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$91",
                        "typeString": "enum OptionExchange.State"
                      }
                    },
                    "src": "4214:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$91",
                      "typeString": "enum OptionExchange.State"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:24:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "67d6cbc2",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3978:2:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3996:0:0"
            },
            "scope": 464,
            "src": "3960:294:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "4334:904:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$91",
                          "typeString": "enum OptionExchange.State"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "OptionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "4352:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$91",
                            "typeString": "enum OptionExchange.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "4367:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$91_$",
                              "typeString": "type(enum OptionExchange.State)"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Sold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4367:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$91",
                            "typeString": "enum OptionExchange.State"
                          }
                        },
                        "src": "4352:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4344:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4344:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "4344:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "TokenOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "4396:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$85_storage",
                              "typeString": "struct OptionExchange.option storage ref"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "4396:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4415:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4415:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4396:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572206f6620746865204f7074696f6e",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4426:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d8f3e9a7976d21489009a39130cea9101171d3e8e4452c828261d32d89cf237",
                          "typeString": "literal_string \"You are not the owner of the Option\""
                        },
                        "value": "You are not the owner of the Option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d8f3e9a7976d21489009a39130cea9101171d3e8e4452c828261d32d89cf237",
                          "typeString": "literal_string \"You are not the owner of the Option\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4388:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4388:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "4388:76:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4482:20:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 322,
                            "name": "TokenOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "4483:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$85_storage",
                              "typeString": "struct OptionExchange.option storage ref"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exercised",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78,
                          "src": "4483:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7074696f6e20616c7265616479206578657263697365642065787069726564",
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4504:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c7c7b3a12909f90f40f704b45eb3f137567f3c0cb2b808fa7ff0fc02b66f324",
                          "typeString": "literal_string \"Option already exercised expired\""
                        },
                        "value": "Option already exercised expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c7c7b3a12909f90f40f704b45eb3f137567f3c0cb2b808fa7ff0fc02b66f324",
                          "typeString": "literal_string \"Option already exercised expired\""
                        }
                      ],
                      "id": 321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4474:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4474:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "4474:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 329,
                            "name": "TokenOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "4557:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$85_storage",
                              "typeString": "struct OptionExchange.option storage ref"
                            }
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 74,
                          "src": "4557:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 331,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "4575:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4557:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7074696f6e206861732065787069726564",
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4579:20:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e7921e5f0532af82e21f59be55c8471dc8cf414e5003a716de667201fbb77ee",
                          "typeString": "literal_string \"Option has expired\""
                        },
                        "value": "Option has expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e7921e5f0532af82e21f59be55c8471dc8cf414e5003a716de667201fbb77ee",
                          "typeString": "literal_string \"Option has expired\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4549:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:51:0"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "mutability": "mutable",
                      "name": "selltokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 397,
                      "src": "4610:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4610:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 341,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 338,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "4635:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "4635:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4635:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4610:45:0"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "buyTokenDecimals",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 397,
                      "src": "4665:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4665:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "payToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "4689:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "4689:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4665:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "exerciseVal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "4718:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 349,
                            "name": "TokenOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "4732:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$85_storage",
                              "typeString": "struct OptionExchange.option storage ref"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "strike",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70,
                          "src": "4732:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 351,
                            "name": "TokenOpts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "4749:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_option_$85_storage",
                              "typeString": "struct OptionExchange.option storage ref"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "4749:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4732:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4767:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 355,
                              "name": "selltokenDecimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "4771:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4767:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 357,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4766:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4732:57:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4718:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4718:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4965:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4965:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 366,
                            "name": "contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "4976:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 367,
                              "name": "TokenOpts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "4993:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_option_$85_storage",
                                "typeString": "struct OptionExchange.option storage ref"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "strike",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "4993:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 362,
                            "name": "payToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "4943:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 600,
                          "src": "4943:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4943:67:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a20627579657220686173206e6f742070616964",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5012:27:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f3b83bca597d71620d7d23213f3519cccc7983ea60d4ee430325280e87261f9",
                          "typeString": "literal_string \"Error: buyer has not paid\""
                        },
                        "value": "Error: buyer has not paid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f3b83bca597d71620d7d23213f3519cccc7983ea60d4ee430325280e87261f9",
                          "typeString": "literal_string \"Error: buyer has not paid\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4935:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "4935:105:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 376,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "5073:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 377,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5089:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5089:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "exerciseVal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5100:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 373,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "5050:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "5050:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5050:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "5050:62:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 385,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "5144:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "5160:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strike",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70,
                        "src": "5166:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 382,
                        "name": "payToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "5122:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$601",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 600,
                      "src": "5122:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5122:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "5122:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 391,
                        "name": "TokenOpts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "5202:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_option_$85_storage",
                          "typeString": "struct OptionExchange.option storage ref"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exercised",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "5202:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5224:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5202:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5202:26:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d32cb0fe",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exercise",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4334:0:0"
            },
            "scope": 464,
            "src": "4299:939:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "5340:94:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "sellTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5357:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "payTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "5374:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 413,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "5390:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 414,
                        "name": "buyTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "5396:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 415,
                        "name": "sellTokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "5411:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 416,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5356:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_string_storage_$_t_string_storage_$",
                      "typeString": "tuple(address,address,address,string storage ref,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 410,
                  "id": 417,
                  "nodeType": "Return",
                  "src": "5350:77:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4051ddac",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSummary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5264:2:0"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 419,
                  "src": "5287:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 419,
                  "src": "5295:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5295:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 419,
                  "src": "5303:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5303:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 419,
                  "src": "5311:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5311:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 419,
                  "src": "5325:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5325:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5286:53:0"
            },
            "scope": 464,
            "src": "5245:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "5549:346:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "OptionState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "5592:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$91",
                          "typeString": "enum OptionExchange.State"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 443,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5617:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strike",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70,
                        "src": "5617:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5647:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "5647:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 447,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5678:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expiry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "5678:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5708:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "5708:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 451,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5738:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exercised",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78,
                        "src": "5738:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 453,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5771:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canceled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "5771:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 455,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5803:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "writer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 82,
                        "src": "5803:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "TokenOpts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "5833:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_option_$85_storage",
                            "typeString": "struct OptionExchange.option storage ref"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "5833:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 459,
                        "name": "exerciseVal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "5862:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 460,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5565:309:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_State_$91_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(enum OptionExchange.State,uint256,uint256,uint256,uint256,bool,bool,address payable,address payable,uint256)"
                    }
                  },
                  "functionReturnParameters": 441,
                  "id": 461,
                  "nodeType": "Return",
                  "src": "5559:315:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "76cfce0a",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getShowSummary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5467:2:0"
            },
            "returnParameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5490:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$91",
                    "typeString": "enum OptionExchange.State"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 421,
                    "name": "State",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 91,
                    "src": "5490:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$91",
                      "typeString": "enum OptionExchange.State"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5496:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 426,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5501:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5501:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5506:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5511:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5516:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5516:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5521:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5521:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5526:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5535:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 463,
                  "src": "5543:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5543:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5489:59:0"
            },
            "scope": 464,
            "src": "5444:451:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1077,
        "src": "857:5041:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 508,
        "linearizedBaseContracts": [
          508
        ],
        "name": "AggregatorV3Interface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "313ce567",
            "id": 469,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5956:2:0"
            },
            "returnParameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 469,
                  "src": "6001:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6001:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5993:19:0"
            },
            "scope": 508,
            "src": "5939:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "7284e416",
            "id": 474,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "description",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6037:2:0"
            },
            "returnParameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 474,
                  "src": "6082:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6082:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6074:27:0"
            },
            "scope": 508,
            "src": "6017:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "54fd4d50",
            "id": 479,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6122:2:0"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 479,
                  "src": "6167:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6167:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6159:21:0"
            },
            "scope": 508,
            "src": "6106:75:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "9a6fc8f5",
            "id": 494,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "6423:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "6423:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6417:25:0"
            },
            "returnParameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "6485:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "6485:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "6507:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6507:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "6528:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6528:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "6553:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6553:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 494,
                  "src": "6578:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "6578:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6477:129:0"
            },
            "scope": 508,
            "src": "6396:211:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "feaf968c",
            "id": 507,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "latestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6635:2:0"
            },
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "6680:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "6680:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "6702:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6702:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "6723:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6723:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "6748:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6748:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 507,
                  "src": "6773:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "6773:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6672:129:0"
            },
            "scope": 508,
            "src": "6611:191:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1077,
        "src": "5902:903:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 601,
        "linearizedBaseContracts": [
          601
        ],
        "name": "LinkTokenInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "dd62ed3e",
            "id": 517,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 517,
                  "src": "6859:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 517,
                  "src": "6874:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6874:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6858:32:0"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 517,
                  "src": "6914:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6914:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6913:19:0"
            },
            "scope": 601,
            "src": "6840:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "095ea7b3",
            "id": 526,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "6953:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6953:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "6970:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6970:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6952:32:0"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 526,
                  "src": "7003:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7003:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7002:14:0"
            },
            "scope": 601,
            "src": "6936:81:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "70a08231",
            "id": 533,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 533,
                  "src": "7039:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7039:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7038:15:0"
            },
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 533,
                  "src": "7077:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7077:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7076:17:0"
            },
            "scope": 601,
            "src": "7020:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "313ce567",
            "id": 538,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7114:2:0"
            },
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "decimalPlaces",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 538,
                  "src": "7140:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7140:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7139:21:0"
            },
            "scope": 601,
            "src": "7097:64:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "66188463",
            "id": 547,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseApproval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 547,
                  "src": "7190:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7190:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 547,
                  "src": "7207:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7207:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7189:37:0"
            },
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 547,
                  "src": "7245:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7245:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7244:14:0"
            },
            "scope": 601,
            "src": "7164:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "d73dd623",
            "id": 554,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseApproval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 554,
                  "src": "7288:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7288:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 554,
                  "src": "7305:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7287:42:0"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7338:0:0"
            },
            "scope": 601,
            "src": "7262:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "06fdde03",
            "id": 559,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7355:2:0"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 559,
                  "src": "7381:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7381:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7380:25:0"
            },
            "scope": 601,
            "src": "7342:64:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "95d89b41",
            "id": 564,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7424:2:0"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 564,
                  "src": "7450:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7450:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7449:27:0"
            },
            "scope": 601,
            "src": "7409:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "18160ddd",
            "id": 569,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7500:2:0"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "totalTokensIssued",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 569,
                  "src": "7526:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7526:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7525:27:0"
            },
            "scope": 601,
            "src": "7480:73:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "a9059cbb",
            "id": 578,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 578,
                  "src": "7574:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7574:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 578,
                  "src": "7586:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7573:27:0"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 578,
                  "src": "7619:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7619:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7618:14:0"
            },
            "scope": 601,
            "src": "7556:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "4000aea0",
            "id": 589,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 580,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 589,
                  "src": "7661:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7661:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 589,
                  "src": "7673:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7673:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 589,
                  "src": "7688:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7688:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7660:48:0"
            },
            "returnParameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 587,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 589,
                  "src": "7727:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7727:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7726:14:0"
            },
            "scope": 601,
            "src": "7636:105:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "23b872dd",
            "id": 600,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 600,
                  "src": "7766:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7766:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 600,
                  "src": "7780:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7780:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 600,
                  "src": "7792:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7765:41:0"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 600,
                  "src": "7825:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7825:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7824:14:0"
            },
            "scope": 601,
            "src": "7744:95:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1077,
        "src": "6807:1034:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 794,
        "linearizedBaseContracts": [
          794
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "8156:109:0",
              "statements": [
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 626,
                      "src": "8166:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 611,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8166:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 616,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 613,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "8178:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 614,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 606,
                      "src": "8182:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8178:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8166:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 618,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "8201:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 619,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "8206:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8201:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8209:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        },
                        "value": "SafeMath: addition overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                          "typeString": "literal_string \"SafeMath: addition overflow\""
                        }
                      ],
                      "id": 617,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8193:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8193:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "8193:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 624,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 612,
                    "src": "8257:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 610,
                  "id": 625,
                  "nodeType": "Return",
                  "src": "8250:8:0"
                }
              ]
            },
            "documentation": {
              "id": 602,
              "nodeType": "StructuredDocumentation",
              "src": "7867:217:0",
              "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
            },
            "id": 627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 627,
                  "src": "8102:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8102:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 627,
                  "src": "8113:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8101:22:0"
            },
            "returnParameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 627,
                  "src": "8147:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8147:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8146:9:0"
            },
            "scope": 794,
            "src": "8089:176:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "8596:67:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 630,
                        "src": "8617:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "8620:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8623:32:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        },
                        "value": "SafeMath: subtraction overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                          "typeString": "literal_string \"SafeMath: subtraction overflow\""
                        }
                      ],
                      "id": 637,
                      "name": "sub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        644,
                        672
                      ],
                      "referencedDeclaration": 672,
                      "src": "8613:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8613:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 636,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "8606:50:0"
                }
              ]
            },
            "documentation": {
              "id": 628,
              "nodeType": "StructuredDocumentation",
              "src": "8271:253:0",
              "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
            },
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 644,
                  "src": "8542:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8542:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 644,
                  "src": "8553:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8553:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8541:22:0"
            },
            "returnParameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 644,
                  "src": "8587:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8587:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8586:9:0"
            },
            "scope": 794,
            "src": "8529:134:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "9042:92:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 657,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "9060:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 658,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "9065:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9060:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "9068:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9052:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9052:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "9052:29:0"
                },
                {
                  "assignments": [
                    664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 664,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 671,
                      "src": "9091:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9091:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 668,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 665,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 647,
                      "src": "9103:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 666,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "9107:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9103:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9091:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 664,
                    "src": "9126:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 655,
                  "id": 670,
                  "nodeType": "Return",
                  "src": "9119:8:0"
                }
              ]
            },
            "documentation": {
              "id": 645,
              "nodeType": "StructuredDocumentation",
              "src": "8669:273:0",
              "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
            },
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "8960:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8960:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "8971:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8971:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "8982:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8982:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8959:50:0"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 654,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "9033:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9033:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9032:9:0"
            },
            "scope": 794,
            "src": "8947:187:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "9441:392:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 682,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "9673:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9678:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9673:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 688,
                  "nodeType": "IfStatement",
                  "src": "9669:45:0",
                  "trueBody": {
                    "id": 687,
                    "nodeType": "Block",
                    "src": "9681:33:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9702:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 681,
                        "id": 686,
                        "nodeType": "Return",
                        "src": "9695:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 690,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 706,
                      "src": "9724:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9724:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 694,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 691,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 675,
                      "src": "9736:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 692,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "9740:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9736:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9724:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 696,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "9759:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 697,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "9763:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9759:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 699,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "9768:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9759:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9771:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        },
                        "value": "SafeMath: multiplication overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                          "typeString": "literal_string \"SafeMath: multiplication overflow\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9751:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9751:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "9751:56:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 690,
                    "src": "9825:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 681,
                  "id": 705,
                  "nodeType": "Return",
                  "src": "9818:8:0"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "9140:229:0",
              "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
            },
            "id": 707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 707,
                  "src": "9387:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9387:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 707,
                  "src": "9398:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9398:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9386:22:0"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 680,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 707,
                  "src": "9432:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9432:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9431:9:0"
            },
            "scope": 794,
            "src": "9374:459:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 723,
              "nodeType": "Block",
              "src": "10355:63:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 718,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "10376:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 719,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "10379:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10382:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        },
                        "value": "SafeMath: division by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                          "typeString": "literal_string \"SafeMath: division by zero\""
                        }
                      ],
                      "id": 717,
                      "name": "div",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        724,
                        752
                      ],
                      "referencedDeclaration": 752,
                      "src": "10372:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10372:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 716,
                  "id": 722,
                  "nodeType": "Return",
                  "src": "10365:46:0"
                }
              ]
            },
            "documentation": {
              "id": 708,
              "nodeType": "StructuredDocumentation",
              "src": "9839:444:0",
              "text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 724,
                  "src": "10301:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10301:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 724,
                  "src": "10312:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10312:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10300:22:0"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 724,
                  "src": "10346:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10346:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10345:9:0"
            },
            "scope": 794,
            "src": "10288:130:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "10988:243:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 737,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 729,
                          "src": "11072:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11076:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11072:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 740,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "11079:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11064:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11064:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "11064:28:0"
                },
                {
                  "assignments": [
                    744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 744,
                      "mutability": "mutable",
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 751,
                      "src": "11102:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 743,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 748,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 745,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 727,
                      "src": "11114:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 729,
                      "src": "11118:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11114:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11102:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 749,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 744,
                    "src": "11223:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 735,
                  "id": 750,
                  "nodeType": "Return",
                  "src": "11216:8:0"
                }
              ]
            },
            "documentation": {
              "id": 725,
              "nodeType": "StructuredDocumentation",
              "src": "10424:464:0",
              "text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 727,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 752,
                  "src": "10906:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10906:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 729,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 752,
                  "src": "10917:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10917:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 752,
                  "src": "10928:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10928:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10905:50:0"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 752,
                  "src": "10979:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10979:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10978:9:0"
            },
            "scope": 794,
            "src": "10893:338:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 768,
              "nodeType": "Block",
              "src": "11742:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "11763:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "11766:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11769:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        },
                        "value": "SafeMath: modulo by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                          "typeString": "literal_string \"SafeMath: modulo by zero\""
                        }
                      ],
                      "id": 762,
                      "name": "mod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        769,
                        793
                      ],
                      "referencedDeclaration": 793,
                      "src": "11759:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11759:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 761,
                  "id": 767,
                  "nodeType": "Return",
                  "src": "11752:44:0"
                }
              ]
            },
            "documentation": {
              "id": 753,
              "nodeType": "StructuredDocumentation",
              "src": "11237:433:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 769,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 769,
                  "src": "11688:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11688:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 769,
                  "src": "11699:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11699:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11687:22:0"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 769,
                  "src": "11733:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11733:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11732:9:0"
            },
            "scope": 794,
            "src": "11675:128:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "12362:68:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 774,
                          "src": "12380:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12385:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12380:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 785,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "12388:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 781,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12372:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "12372:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 788,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
                      "src": "12418:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "12422:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12418:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 780,
                  "id": 791,
                  "nodeType": "Return",
                  "src": "12411:12:0"
                }
              ]
            },
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "11809:453:0",
              "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
            },
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 793,
                  "src": "12280:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12280:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 793,
                  "src": "12291:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12291:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 793,
                  "src": "12302:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12279:50:0"
            },
            "returnParameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 779,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 793,
                  "src": "12353:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12352:9:0"
            },
            "scope": 794,
            "src": "12267:163:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1077,
        "src": "7844:4588:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1076,
        "linearizedBaseContracts": [
          1076
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 797,
            "libraryName": {
              "contractScope": null,
              "id": 795,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 794,
              "src": "12468:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$794",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "12462:27:0",
            "typeName": {
              "id": 796,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "12481:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 805,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "12509:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12509:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "12537:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12537:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 805,
                  "src": "12562:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12562:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12508:66:0"
            },
            "src": "12494:81:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 813,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 813,
                  "src": "12595:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12595:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 813,
                  "src": "12617:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12617:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 813,
                  "src": "12637:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12637:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12594:55:0"
            },
            "src": "12580:70:0"
          },
          {
            "constant": false,
            "id": 817,
            "mutability": "mutable",
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1076,
            "src": "12655:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 816,
              "keyType": {
                "id": 814,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "12663:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "12655:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 815,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "12674:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 823,
            "mutability": "mutable",
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1076,
            "src": "12697:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 822,
              "keyType": {
                "id": 818,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "12705:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "12697:48:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 821,
                "keyType": {
                  "id": 819,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "12725:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "12716:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 820,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "12736:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 825,
            "mutability": "mutable",
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1076,
            "src": "12759:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 824,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "12759:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 827,
            "mutability": "mutable",
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1076,
            "src": "12785:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 826,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "12785:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 829,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1076,
            "src": "12812:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 828,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "12812:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 831,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1076,
            "src": "12837:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "12837:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 865,
              "nodeType": "Block",
              "src": "12974:168:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 842,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 827,
                      "src": "12984:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 843,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "12995:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12984:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 845,
                  "nodeType": "ExpressionStatement",
                  "src": "12984:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 846,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "13014:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 847,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "13023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "13014:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "13014:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 850,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "13040:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 851,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "13047:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "13040:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "13040:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 854,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "13062:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 855,
                      "name": "_total_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "13077:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13062:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "13062:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 858,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "13100:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 861,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 859,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13109:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13109:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13100:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 862,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "13123:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13100:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "13100:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 866,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 866,
                  "src": "12884:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12884:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 866,
                  "src": "12901:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12901:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 866,
                  "src": "12924:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12924:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "_total_supply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 866,
                  "src": "12945:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12945:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12883:84:0"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12974:0:0"
            },
            "scope": 1076,
            "src": "12872:270:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "13201:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 871,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 831,
                    "src": "13218:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 870,
                  "id": 872,
                  "nodeType": "Return",
                  "src": "13211:19:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18160ddd",
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13168:2:0"
            },
            "returnParameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 874,
                  "src": "13192:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13192:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13191:9:0"
            },
            "scope": 1076,
            "src": "13148:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "13313:44:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 881,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "13330:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 883,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 882,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 876,
                      "src": "13339:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13330:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 884,
                  "nodeType": "Return",
                  "src": "13323:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "70a08231",
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 886,
                  "src": "13266:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13266:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13265:20:0"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 886,
                  "src": "13307:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13307:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13306:6:0"
            },
            "scope": 1076,
            "src": "13247:110:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 937,
              "nodeType": "Block",
              "src": "13437:268:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 896,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "13455:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 897,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "13468:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 900,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 898,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13477:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13477:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13468:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13455:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13447:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13447:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "13447:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "13499:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 907,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13508:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13508:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13499:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 913,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "13547:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 908,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "13522:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 911,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13531:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13531:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13522:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 644,
                        "src": "13522:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13522:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13499:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "13499:58:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "13567:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 919,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 918,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "13576:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13567:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 924,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "13611:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 920,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "13588:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 922,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 921,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "13597:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13588:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "13588:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13588:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13567:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "13567:54:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 929,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13645:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13645:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 931,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 888,
                        "src": "13657:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 932,
                        "name": "numTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "13667:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 928,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "13636:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13636:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 934,
                  "nodeType": "EmitStatement",
                  "src": "13631:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13694:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 894,
                  "id": 936,
                  "nodeType": "Return",
                  "src": "13687:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9059cbb",
            "id": 938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 938,
                  "src": "13381:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13381:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 938,
                  "src": "13399:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13399:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13380:34:0"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 938,
                  "src": "13431:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13431:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13430:6:0"
            },
            "scope": 1076,
            "src": "13363:342:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 965,
              "nodeType": "Block",
              "src": "13784:135:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 947,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "13794:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 951,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 948,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13802:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13802:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13794:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 952,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 950,
                        "name": "delegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "13814:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13794:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 953,
                      "name": "numTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 942,
                      "src": "13826:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13794:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "13794:41:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 957,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13859:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "13859:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 959,
                        "name": "delegate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "13871:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 960,
                        "name": "numTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "13881:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 956,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "13850:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13850:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "13845:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13908:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 946,
                  "id": 964,
                  "nodeType": "Return",
                  "src": "13901:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "095ea7b3",
            "id": 966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 966,
                  "src": "13728:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13728:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 966,
                  "src": "13746:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13746:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13727:34:0"
            },
            "returnParameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 966,
                  "src": "13778:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13778:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13777:6:0"
            },
            "scope": 1076,
            "src": "13711:208:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 981,
              "nodeType": "Block",
              "src": "14004:48:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 975,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "14021:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 977,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 976,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "14029:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14021:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 979,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 978,
                      "name": "delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "14036:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14021:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 974,
                  "id": 980,
                  "nodeType": "Return",
                  "src": "14014:31:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "dd62ed3e",
            "id": 982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 982,
                  "src": "13944:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13944:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 982,
                  "src": "13959:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13959:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13943:33:0"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 982,
                  "src": "13998:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13998:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13997:6:0"
            },
            "scope": 1076,
            "src": "13925:127:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "14148:386:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 994,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "14166:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 995,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "14179:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 997,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 996,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "14188:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14179:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14166:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14158:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14158:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "14158:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1002,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "14217:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1003,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 823,
                              "src": "14230:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1005,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1004,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "14238:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14230:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1008,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1006,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14245:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14245:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14230:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14217:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14209:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14209:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "14209:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "14272:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1014,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1013,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "14281:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14272:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1019,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "14310:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1015,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "14290:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1016,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "14299:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14290:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 644,
                        "src": "14290:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14290:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14272:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "14272:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1023,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 823,
                          "src": "14330:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1027,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1024,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "14338:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14330:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1028,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14345:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14345:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14330:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1036,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "14390:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1029,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 823,
                              "src": "14359:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1031,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1030,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "14367:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14359:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1034,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1032,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14374:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14374:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14359:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 644,
                        "src": "14359:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14359:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14330:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "14330:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1040,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "14410:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1042,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1041,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "14419:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14410:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1047,
                          "name": "numTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "14448:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1043,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "14428:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1045,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1044,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 986,
                            "src": "14437:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14428:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 627,
                        "src": "14428:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14428:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14410:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "14410:48:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1052,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "14482:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1053,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "14489:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1054,
                        "name": "numTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "14496:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1051,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "14473:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14473:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "EmitStatement",
                  "src": "14468:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14523:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 992,
                  "id": 1058,
                  "nodeType": "Return",
                  "src": "14516:11:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "23b872dd",
            "id": 1060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1060,
                  "src": "14080:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14080:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 986,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1060,
                  "src": "14095:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14095:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "numTokens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1060,
                  "src": "14110:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14110:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14079:46:0"
            },
            "returnParameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1060,
                  "src": "14142:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14142:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14141:6:0"
            },
            "scope": 1076,
            "src": "14058:476:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "14620:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 1069,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "14638:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1070,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "14646:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "14652:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1072,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14637:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,string storage ref,uint256)"
                    }
                  },
                  "functionReturnParameters": 1068,
                  "id": 1073,
                  "nodeType": "Return",
                  "src": "14630:35:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4051ddac",
            "id": 1075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSummary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14559:2:0"
            },
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1075,
                  "src": "14582:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14582:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1075,
                  "src": "14596:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14596:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1075,
                  "src": "14611:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14611:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14581:38:0"
            },
            "scope": 1076,
            "src": "14540:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1077,
        "src": "12436:2238:0"
      }
    ],
    "src": "0:14677:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000c4138038062000c41833981810160405260808110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82516401000000008111828201881017156200009057600080fd5b82525081516020918201929091019080838360005b83811015620000bf578181015183820152602001620000a5565b50505050905090810190601f168015620000ed5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011157600080fd5b9083019060208201858111156200012757600080fd5b82516401000000008111828201881017156200014257600080fd5b82525081516020918201929091019080838360005b838110156200017157818101518382015260200162000157565b50505050905090810190601f1680156200019f5780820380516001836020036101000a031916815260200191505b506040526020908101516003805460ff191660ff89161790558551909350620001cf925060029186019062000205565b508151620001e590600490602085019062000205565b5060058190553360009081526020819052604090205550620002a1915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024857805160ff191683800117855562000278565b8280016001018555821562000278579182015b82811115620002785782518255916020019190600101906200025b565b50620002869291506200028a565b5090565b5b808211156200028657600081556001016200028b565b61099080620002b16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634051ddac116100665780634051ddac146101ce57806370a08231146102bb57806395d89b41146102e1578063a9059cbb146102e9578063dd62ed3e146103155761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab610343565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b0381351690602001356103d1565b604080519115158252519081900360200190f35b610168610437565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b0381358116916020810135909116906040013561043d565b6101b8610586565b6040805160ff9092168252519081900360200190f35b6101d661058f565b604051808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561021d578181015183820152602001610205565b50505050905090810190601f16801561024a5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561027d578181015183820152602001610265565b50505050905090810190601f1680156102aa5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b610168600480360360208110156102d157600080fd5b50356001600160a01b03166106c4565b6100ab6106df565b61014c600480360360408110156102ff57600080fd5b506001600160a01b038135169060200135610737565b6101686004803603604081101561032b57600080fd5b506001600160a01b03813581169160200135166107f5565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60055490565b6001600160a01b03831660009081526020819052604081205482111561046257600080fd5b6001600160a01b038416600090815260016020908152604080832033845290915290205482111561049257600080fd5b6001600160a01b0384166000908152602081905260409020546104b59083610820565b6001600160a01b0385166000908152602081815260408083209390935560018152828220338352905220546104ea9083610820565b6001600160a01b03808616600090815260016020908152604080832033845282528083209490945591861681529081905220546105279083610869565b6001600160a01b038085166000818152602081815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60035460ff1681565b60055460028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606094859460009490936004939185918301828280156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156106b25780601f10610687576101008083540402835291602001916106b2565b820191906000526020600020905b81548152906001019060200180831161069557829003601f168201915b50505050509150925092509250909192565b6001600160a01b031660009081526020819052604090205490565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103c95780601f1061039e576101008083540402835291602001916103c9565b3360009081526020819052604081205482111561075357600080fd5b3360009081526020819052604090205461076d9083610820565b33600090815260208190526040808220929092556001600160a01b038516815220546107999083610869565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600061086283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108c3565b9392505050565b600082820183811015610862576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081848411156109525760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109175781810151838201526020016108ff565b50505050905090810190601f1680156109445780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea264697066735822122088d46c2140a4264a4e6a867fcea930a8b807efa502bcee72608b60aa93dec3f864736f6c634300060c0033",
  "bytecodeSha1": "b603b3936da7c116242aa141dee04cb1a372efea",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20.transfer": {
          "24": [
            13455,
            13488,
            true
          ]
        },
        "ERC20.transferFrom": {
          "22": [
            14166,
            14194,
            true
          ],
          "23": [
            14217,
            14256,
            true
          ]
        },
        "SafeMath.add": {
          "25": [
            8201,
            8207,
            true
          ]
        },
        "SafeMath.sub": {
          "26": [
            9060,
            9066,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20.allowance": {
          "18": [
            14014,
            14045
          ]
        },
        "ERC20.approve": {
          "0": [
            13794,
            13835
          ],
          "1": [
            13845,
            13891
          ],
          "2": [
            13901,
            13912
          ]
        },
        "ERC20.balanceOf": {
          "12": [
            13323,
            13350
          ]
        },
        "ERC20.getSummary": {
          "11": [
            14630,
            14665
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            13211,
            13230
          ]
        },
        "ERC20.transfer": {
          "13": [
            13447,
            13489
          ],
          "14": [
            13499,
            13557
          ],
          "15": [
            13567,
            13621
          ],
          "16": [
            13631,
            13677
          ],
          "17": [
            13687,
            13698
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            14158,
            14195
          ],
          "5": [
            14209,
            14257
          ],
          "6": [
            14272,
            14320
          ],
          "7": [
            14330,
            14400
          ],
          "8": [
            14410,
            14458
          ],
          "9": [
            14468,
            14506
          ],
          "10": [
            14516,
            14527
          ]
        },
        "SafeMath.add": {
          "20": [
            8193,
            8239
          ]
        },
        "SafeMath.sub": {
          "19": [
            8606,
            8656
          ],
          "21": [
            9052,
            9081
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80634051ddac116100665780634051ddac146101ce57806370a08231146102bb57806395d89b41146102e1578063a9059cbb146102e9578063dd62ed3e146103155761009e565b806306fdde03146100a3578063095ea7b31461012057806318160ddd1461016057806323b872dd1461017a578063313ce567146101b0575b600080fd5b6100ab610343565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e55781810151838201526020016100cd565b50505050905090810190601f1680156101125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014c6004803603604081101561013657600080fd5b506001600160a01b0381351690602001356103d1565b604080519115158252519081900360200190f35b610168610437565b60408051918252519081900360200190f35b61014c6004803603606081101561019057600080fd5b506001600160a01b0381358116916020810135909116906040013561043d565b6101b8610586565b6040805160ff9092168252519081900360200190f35b6101d661058f565b604051808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561021d578181015183820152602001610205565b50505050905090810190601f16801561024a5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561027d578181015183820152602001610265565b50505050905090810190601f1680156102aa5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b610168600480360360208110156102d157600080fd5b50356001600160a01b03166106c4565b6100ab6106df565b61014c600480360360408110156102ff57600080fd5b506001600160a01b038135169060200135610737565b6101686004803603604081101561032b57600080fd5b506001600160a01b03813581169160200135166107f5565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60055490565b6001600160a01b03831660009081526020819052604081205482111561046257600080fd5b6001600160a01b038416600090815260016020908152604080832033845290915290205482111561049257600080fd5b6001600160a01b0384166000908152602081905260409020546104b59083610820565b6001600160a01b0385166000908152602081815260408083209390935560018152828220338352905220546104ea9083610820565b6001600160a01b03808616600090815260016020908152604080832033845282528083209490945591861681529081905220546105279083610869565b6001600160a01b038085166000818152602081815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60035460ff1681565b60055460028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606094859460009490936004939185918301828280156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156106b25780601f10610687576101008083540402835291602001916106b2565b820191906000526020600020905b81548152906001019060200180831161069557829003601f168201915b50505050509150925092509250909192565b6001600160a01b031660009081526020819052604090205490565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103c95780601f1061039e576101008083540402835291602001916103c9565b3360009081526020819052604081205482111561075357600080fd5b3360009081526020819052604090205461076d9083610820565b33600090815260208190526040808220929092556001600160a01b038516815220546107999083610869565b6001600160a01b038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600061086283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108c3565b9392505050565b600082820183811015610862576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081848411156109525760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109175781810151838201526020016108ff565b50505050905090810190601f1680156109445780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea264697066735822122088d46c2140a4264a4e6a867fcea930a8b807efa502bcee72608b60aa93dec3f864736f6c634300060c0033",
  "deployedSourceMap": "12436:2238:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12812:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13711:208;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13711:208:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13148:89;;;:::i;:::-;;;;;;;;;;;;;;;;14058:476;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14058:476:0;;;;;;;;;;;;;;;;;:::i;12785:21::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14540:132;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14540:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13247:110;;;;;;;;;;;;;;;;-1:-1:-1;13247:110:0;-1:-1:-1;;;;;13247:110:0;;:::i;12759:20::-;;;:::i;13363:342::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13363:342:0;;;;;;;;:::i;13925:127::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13925:127:0;;;;;;;;;;:::i;12812:19::-;;;;;;;;;;;;;;;-1:-1:-1;;12812:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13711:208::-;13802:10;13778:4;13794:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;13794:29:0;;;;;;;;;;;:41;;;13850;;;;;;;13778:4;;13794:29;;13802:10;;13850:41;;;;;;;;-1:-1:-1;13908:4:0;13711:208;;;;:::o;13148:89::-;13218:12;;13148:89;:::o;14058:476::-;-1:-1:-1;;;;;14179:15:0;;14142:4;14179:15;;;;;;;;;;;14166:28;;;14158:37;;;;;;-1:-1:-1;;;;;14230:14:0;;;;;;:7;:14;;;;;;;;14245:10;14230:26;;;;;;;;14217:39;;;14209:48;;;;;;-1:-1:-1;;;;;14290:15:0;;:8;:15;;;;;;;;;;;:30;;14310:9;14290:19;:30::i;:::-;-1:-1:-1;;;;;14272:15:0;;:8;:15;;;;;;;;;;;:48;;;;14359:7;:14;;;;;14374:10;14359:26;;;;;;:41;;14390:9;14359:30;:41::i;:::-;-1:-1:-1;;;;;14330:14:0;;;;;;;:7;:14;;;;;;;;14345:10;14330:26;;;;;;;:70;;;;14428:15;;;;;;;;;;;:30;;14448:9;14428:19;:30::i;:::-;-1:-1:-1;;;;;14410:15:0;;;:8;:15;;;;;;;;;;;;:48;;;;14473:33;;;;;;;14410:15;;14473:33;;;;;;;;;;;;;-1:-1:-1;14523:4:0;14058:476;;;;;:::o;12785:21::-;;;;;;:::o;14540:132::-;14652:12;;14638:6;14630:35;;;;;;;-1:-1:-1;;14630:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14582:13;;;;14611:7;;14638:6;;14646:4;;14630:35;14638:6;;14630:35;;14638:6;14630:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14630:35:0;;;;;;;;;;;;;-1:-1:-1;;14630:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14630:35:0;;-1:-1:-1;14630:35:0;-1:-1:-1;14630:35:0;;;-1:-1:-1;14630:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14540:132;;;:::o;13247:110::-;-1:-1:-1;;;;;13330:20:0;13307:4;13330:20;;;;;;;;;;;;13247:110::o;12759:20::-;;;;;;;;;;;;;;-1:-1:-1;;12759:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13363:342;13477:10;13431:4;13468:20;;;;;;;;;;;13455:33;;;13447:42;;;;;;13531:10;13522:8;:20;;;;;;;;;;;:35;;13547:9;13522:24;:35::i;:::-;13508:10;13499:8;:20;;;;;;;;;;;:58;;;;-1:-1:-1;;;;;13588:18:0;;;;;;:33;;13611:9;13588:22;:33::i;:::-;-1:-1:-1;;;;;13567:18:0;;:8;:18;;;;;;;;;;;;:54;;;;13636:41;;;;;;;13567:18;;13645:10;;13636:41;;;;;;;;;;-1:-1:-1;13694:4:0;13363:342;;;;:::o;13925:127::-;-1:-1:-1;;;;;14021:14:0;;;13998:4;14021:14;;;:7;:14;;;;;;;;:24;;;;;;;;;;;;;13925:127::o;8529:134::-;8587:7;8613:43;8617:1;8620;8613:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;8606:50;8529:134;-1:-1:-1;;;8529:134:0:o;8089:176::-;8147:7;8178:5;;;8201:6;;;;8193:46;;;;;-1:-1:-1;;;8193:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8947:187;9033:7;9068:12;9060:6;;;;9052:29;;;;-1:-1:-1;;;9052:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9103:5:0;;;8947:187::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    12436,
    14674
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4051DDAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x4051DDAC EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x315 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x343 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x112 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x43D JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x205 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x24A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x737 JUMP JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4B5 SWAP1 DUP4 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4EA SWAP1 DUP4 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x527 SWAP1 DUP4 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP9 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND DUP6 SWAP1 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP5 DUP6 SWAP5 PUSH1 0x0 SWAP5 SWAP1 SWAP4 PUSH1 0x4 SWAP4 SWAP2 DUP6 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x624 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x624 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x607 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP DUP6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP6 SWAP9 POP DUP8 SWAP5 POP SWAP3 POP DUP5 ADD SWAP1 POP DUP3 DUP3 DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x687 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x695 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x76D SWAP1 DUP4 PUSH2 0x820 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x799 SWAP1 DUP4 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x8C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x862 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x917 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8FF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x944 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xD4 PUSH13 0x2140A4264A4E6A867FCEA930A8 0xB8 SMOD 0xEF 0xA5 MUL 0xBC 0xEE PUSH19 0x608B60AA93DEC3F864736F6C634300060C0033 ",
  "pcMap": {
    "0": {
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4051DDAC"
    },
    "38": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4051DDAC"
    },
    "49": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "53": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB"
    },
    "64": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E1"
    },
    "75": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E9"
    },
    "86": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x315"
    },
    "97": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "101": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "109": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "120": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "124": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "131": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "135": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "142": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A"
    },
    "146": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "153": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "157": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        12436,
        14674
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "167": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "170": {
      "fn": null,
      "jump": "i",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "174": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "178": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "184": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "191": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP6",
      "path": "0"
    },
    "198": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "205": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "LT",
      "path": "0"
    },
    "209": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "213": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "215": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "222": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "224": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "228": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "231": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "233": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "237": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "238": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "239": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "242": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "AND",
      "path": "0"
    },
    "243": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "244": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "248": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "249": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SUB",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "253": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "254": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "256": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "259": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SUB",
      "path": "0"
    },
    "260": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "263": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "EXP",
      "path": "0"
    },
    "264": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SUB",
      "path": "0"
    },
    "265": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "NOT",
      "path": "0"
    },
    "266": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "AND",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "271": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "272": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "276": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "280": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "282": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "284": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SUB",
      "path": "0"
    },
    "286": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        12812,
        12831
      ],
      "op": "RETURN",
      "path": "0"
    },
    "288": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "292": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "294": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "295": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "296": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SUB",
      "path": "0"
    },
    "297": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "299": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "300": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "LT",
      "path": "0"
    },
    "301": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "302": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "305": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "306": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "308": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "309": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "REVERT",
      "path": "0"
    },
    "310": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "op": "POP"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "318": {
      "op": "SHL"
    },
    "319": {
      "op": "SUB"
    },
    "320": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "321": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "322": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "AND",
      "path": "0"
    },
    "323": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "324": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "326": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "ADD",
      "path": "0"
    },
    "327": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "328": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D1"
    },
    "331": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMP",
      "path": "0"
    },
    "332": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "335": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP1",
      "path": "0"
    },
    "336": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "337": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "338": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "339": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "340": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP3",
      "path": "0"
    },
    "341": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "342": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "343": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "344": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "345": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "346": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SUB",
      "path": "0"
    },
    "347": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "349": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "ADD",
      "path": "0"
    },
    "350": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "351": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "RETURN",
      "path": "0"
    },
    "352": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "353": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "356": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x437"
    },
    "359": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        13148,
        13237
      ],
      "op": "JUMP",
      "path": "0"
    },
    "360": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "363": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "364": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "365": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "366": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "DUP3",
      "path": "0"
    },
    "367": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "368": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "DUP2",
      "path": "0"
    },
    "371": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "SUB",
      "path": "0"
    },
    "373": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "375": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "ADD",
      "path": "0"
    },
    "376": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "377": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "RETURN",
      "path": "0"
    },
    "378": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "382": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "384": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "DUP1",
      "path": "0"
    },
    "385": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "386": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SUB",
      "path": "0"
    },
    "387": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "389": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "390": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "LT",
      "path": "0"
    },
    "391": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "392": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x190"
    },
    "395": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "396": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "398": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "DUP1",
      "path": "0"
    },
    "399": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "REVERT",
      "path": "0"
    },
    "400": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "SUB"
    },
    "410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "412": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "413": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "AND",
      "path": "0"
    },
    "414": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "415": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "417": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "DUP2",
      "path": "0"
    },
    "418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "ADD",
      "path": "0"
    },
    "419": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "420": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "421": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "422": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "AND",
      "path": "0"
    },
    "423": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "426": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "ADD",
      "path": "0"
    },
    "427": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43D"
    },
    "431": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        14058,
        14534
      ],
      "op": "JUMP",
      "path": "0"
    },
    "432": {
      "offset": [
        12785,
        12806
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "433": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B8"
    },
    "436": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x586"
    },
    "439": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        12785,
        12806
      ],
      "op": "JUMP",
      "path": "0"
    },
    "440": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "441": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "443": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "445": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "447": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "448": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "449": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "AND",
      "path": "0"
    },
    "450": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "DUP3",
      "path": "0"
    },
    "451": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "452": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "453": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "454": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "DUP2",
      "path": "0"
    },
    "455": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "456": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SUB",
      "path": "0"
    },
    "457": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "459": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "ADD",
      "path": "0"
    },
    "460": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "461": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "RETURN",
      "path": "0"
    },
    "462": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D6"
    },
    "466": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58F"
    },
    "469": {
      "fn": "ERC20.getSummary",
      "jump": "i",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "470": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "471": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "473": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "474": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "476": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "478": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "479": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "480": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "483": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP5",
      "path": "0"
    },
    "484": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "485": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "486": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "488": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "489": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "490": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "491": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "492": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "493": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "494": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP7",
      "path": "0"
    },
    "495": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "496": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "497": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "498": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "499": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "500": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "502": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "503": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "504": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "505": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "506": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "508": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "510": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "511": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "512": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "513": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "514": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "515": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "517": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "518": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "519": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "520": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "LT",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "522": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "525": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "527": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "528": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "529": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "530": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "531": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP3",
      "path": "0"
    },
    "532": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "533": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "534": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "536": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "537": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x205"
    },
    "540": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "541": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "543": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "544": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "545": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "546": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "548": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "549": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "550": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "551": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "552": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "554": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "AND",
      "path": "0"
    },
    "555": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A"
    },
    "560": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "561": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "562": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP3",
      "path": "0"
    },
    "563": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "564": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "565": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "568": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "569": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "571": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "572": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "575": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "EXP",
      "path": "0"
    },
    "576": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "577": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "NOT",
      "path": "0"
    },
    "578": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "AND",
      "path": "0"
    },
    "579": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "580": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "581": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "583": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "584": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "585": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "586": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "587": {
      "op": "POP"
    },
    "588": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP3",
      "path": "0"
    },
    "592": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "593": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP6",
      "path": "0"
    },
    "594": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "597": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP6",
      "path": "0"
    },
    "598": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "601": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "602": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP3",
      "path": "0"
    },
    "603": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "605": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP8",
      "path": "0"
    },
    "606": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "608": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "609": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "610": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "611": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "613": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "615": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "616": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "LT",
      "path": "0"
    },
    "617": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "618": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "621": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "623": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "624": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "625": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "626": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "627": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP3",
      "path": "0"
    },
    "628": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "629": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "630": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "632": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "633": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "636": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "637": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "638": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "639": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "640": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "641": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "642": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "644": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "645": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "646": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "647": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "648": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "650": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "AND",
      "path": "0"
    },
    "651": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "652": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "653": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AA"
    },
    "656": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "657": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "658": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP3",
      "path": "0"
    },
    "659": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "661": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "662": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "664": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "665": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "667": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "671": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "EXP",
      "path": "0"
    },
    "672": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "673": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "NOT",
      "path": "0"
    },
    "674": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "AND",
      "path": "0"
    },
    "675": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "676": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "677": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "679": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "681": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "682": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "683": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "684": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "685": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "686": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "687": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "688": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "689": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "690": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "POP",
      "path": "0"
    },
    "691": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "693": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "694": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "695": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "696": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SUB",
      "path": "0"
    },
    "697": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "698": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "RETURN",
      "path": "0"
    },
    "699": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "700": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "703": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "705": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "706": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "707": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "SUB",
      "path": "0"
    },
    "708": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "710": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "711": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "LT",
      "path": "0"
    },
    "712": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "713": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "716": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "717": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "719": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "720": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "721": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "AND",
      "path": "0"
    },
    "733": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C4"
    },
    "736": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        13247,
        13357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "737": {
      "offset": [
        12759,
        12779
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "738": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "741": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DF"
    },
    "744": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        12759,
        12779
      ],
      "op": "JUMP",
      "path": "0"
    },
    "745": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "746": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "749": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "751": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "DUP1",
      "path": "0"
    },
    "752": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "753": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "SUB",
      "path": "0"
    },
    "754": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "756": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "DUP2",
      "path": "0"
    },
    "757": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "LT",
      "path": "0"
    },
    "758": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "759": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "762": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "763": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "765": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "DUP1",
      "path": "0"
    },
    "766": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "REVERT",
      "path": "0"
    },
    "767": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "SUB"
    },
    "777": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "DUP2",
      "path": "0"
    },
    "778": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "779": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "AND",
      "path": "0"
    },
    "780": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "781": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "783": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "ADD",
      "path": "0"
    },
    "784": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "785": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x737"
    },
    "788": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        13363,
        13705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "793": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "796": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "797": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "SUB",
      "path": "0"
    },
    "798": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "800": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "DUP2",
      "path": "0"
    },
    "801": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "LT",
      "path": "0"
    },
    "802": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "803": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32B"
    },
    "806": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "809": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "810": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "REVERT",
      "path": "0"
    },
    "811": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "DUP2",
      "path": "0"
    },
    "822": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "823": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "DUP2",
      "path": "0"
    },
    "824": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "AND",
      "path": "0"
    },
    "825": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "826": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "828": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "ADD",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "AND",
      "path": "0"
    },
    "831": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7F5"
    },
    "834": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        13925,
        14052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "838": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "839": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "840": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "842": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "843": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "844": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "846": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "850": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP6",
      "path": "0"
    },
    "851": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "AND",
      "path": "0"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "856": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MUL",
      "path": "0"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "859": {
      "op": "NOT"
    },
    "860": {
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "862": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "863": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "AND",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "865": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "866": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "867": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DIV",
      "path": "0"
    },
    "868": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "870": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "872": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP5",
      "path": "0"
    },
    "873": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DIV",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP5",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MUL",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP5",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "881": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "882": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "883": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "884": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "885": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "887": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "889": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "890": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "891": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "892": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "893": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "894": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "895": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "898": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "899": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "900": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "902": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "LT",
      "path": "0"
    },
    "903": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39E"
    },
    "906": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "907": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "910": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "911": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "912": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "913": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DIV",
      "path": "0"
    },
    "914": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MUL",
      "path": "0"
    },
    "915": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "916": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "917": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "918": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "920": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "922": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "925": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "926": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "927": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "928": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "929": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "930": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "931": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "933": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "934": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "936": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "938": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "939": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "940": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "941": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "942": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "943": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "944": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "945": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "946": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "948": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "949": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "950": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "952": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "953": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP1",
      "path": "0"
    },
    "954": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP4",
      "path": "0"
    },
    "955": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "GT",
      "path": "0"
    },
    "956": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AC"
    },
    "959": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "960": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "961": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "962": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SUB",
      "path": "0"
    },
    "963": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "965": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "AND",
      "path": "0"
    },
    "966": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP3",
      "path": "0"
    },
    "967": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "ADD",
      "path": "0"
    },
    "968": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "969": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "970": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "971": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "972": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "973": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "974": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "POP",
      "path": "0"
    },
    "975": {
      "fn": "ERC20.allowance",
      "offset": [
        12812,
        12831
      ],
      "op": "DUP2",
      "path": "0"
    },
    "976": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        12812,
        12831
      ],
      "op": "JUMP",
      "path": "0"
    },
    "977": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "978": {
      "fn": "ERC20.approve",
      "offset": [
        13802,
        13812
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "979": {
      "fn": "ERC20.approve",
      "offset": [
        13778,
        13782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "981": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "982": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "983": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "984": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "986": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "990": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "991": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "993": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "994": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "DUP4",
      "path": "0"
    },
    "995": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13813
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1002": {
      "op": "SHL"
    },
    "1003": {
      "op": "SUB"
    },
    "1004": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1005": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "AND",
      "path": "0"
    },
    "1006": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1007": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1008": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1009": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1010": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1011": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1012": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1013": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1014": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1015": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13835
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1016": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13835
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1017": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13835
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1018": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 1
    },
    "1019": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1020": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1021": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1023": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1024": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1025": {
      "fn": "ERC20.approve",
      "offset": [
        13778,
        13782
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1026": {
      "fn": "ERC20.approve",
      "offset": [
        13778,
        13782
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1027": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1028": {
      "fn": "ERC20.approve",
      "offset": [
        13794,
        13823
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1029": {
      "fn": "ERC20.approve",
      "offset": [
        13802,
        13812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1030": {
      "fn": "ERC20.approve",
      "offset": [
        13802,
        13812
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1031": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1064": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1065": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1066": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1067": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "SUB",
      "path": "0"
    },
    "1068": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "ADD",
      "path": "0"
    },
    "1069": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1070": {
      "fn": "ERC20.approve",
      "offset": [
        13850,
        13891
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "fn": "ERC20.approve",
      "offset": [
        13908,
        13912
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "1074": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1075": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1076": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "POP",
      "path": "0"
    },
    "1077": {
      "fn": "ERC20.approve",
      "offset": [
        13711,
        13919
      ],
      "op": "POP",
      "path": "0"
    },
    "1078": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        13711,
        13919
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1079": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1080": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13218,
        13230
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x5"
    },
    "1082": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13218,
        13230
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1083": {
      "fn": "ERC20.totalSupply",
      "offset": [
        13148,
        13237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1084": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        13148,
        13237
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1085": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 4
    },
    "1095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "AND",
      "path": "0"
    },
    "1096": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14142,
        14146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1098": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1100": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1101": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1103": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1105": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1106": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1108": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1109": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1110": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14179,
        14194
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1111": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14166,
        14194
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14166,
        14194
      ],
      "op": "GT",
      "path": "0"
    },
    "1113": {
      "branch": 22,
      "fn": "ERC20.transferFrom",
      "offset": [
        14166,
        14194
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1114": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14158,
        14195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x462"
    },
    "1117": {
      "branch": 22,
      "fn": "ERC20.transferFrom",
      "offset": [
        14158,
        14195
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14158,
        14195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14158,
        14195
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1121": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14158,
        14195
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14158,
        14195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "op": "SUB"
    },
    "1131": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 5
    },
    "1132": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "AND",
      "path": "0"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1138": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1142": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1143": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14244
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14245,
        14255
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1158": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14230,
        14256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1159": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14217,
        14256
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1160": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14217,
        14256
      ],
      "op": "GT",
      "path": "0"
    },
    "1161": {
      "branch": 23,
      "fn": "ERC20.transferFrom",
      "offset": [
        14217,
        14256
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1162": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14209,
        14257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x492"
    },
    "1165": {
      "branch": 23,
      "fn": "ERC20.transferFrom",
      "offset": [
        14209,
        14257
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14209,
        14257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1168": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14209,
        14257
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1169": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14209,
        14257
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1170": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14209,
        14257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1177": {
      "op": "SHL"
    },
    "1178": {
      "op": "SUB"
    },
    "1179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "AND",
      "path": "0"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1185": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1186": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1188": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1189": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1190": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1191": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1193": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1194": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1195": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14305
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1196": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B5"
    },
    "1199": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1200": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14310,
        14319
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1201": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x820"
    },
    "1204": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        14290,
        14320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1205": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14290,
        14320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1215": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "AND",
      "path": "0"
    },
    "1216": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14280
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1218": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1219": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1221": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1223": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1224": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1225": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1226": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1229": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1230": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14287
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1231": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14320
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1233": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14320
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1234": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14272,
        14320
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1235": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14366
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1237": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14373
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1238": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14373
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14373
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1240": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14373
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1241": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14373
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14374,
        14384
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1243": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14385
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1244": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14385
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14385
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1249": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14400
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EA"
    },
    "1252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14390,
        14399
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1254": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x820"
    },
    "1257": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        14359,
        14400
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14359,
        14400
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1268": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1269": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "AND",
      "path": "0"
    },
    "1270": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1274": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1275": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1277": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1279": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1280": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1281": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1282": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1284": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1285": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1286": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14344
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1287": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14345,
        14355
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1289": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1292": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1294": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14356
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14400
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1297": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14400
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1298": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14330,
        14400
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 8
    },
    "1300": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1301": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "AND",
      "path": "0"
    },
    "1302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1304": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1306": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14443
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1310": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x527"
    },
    "1313": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1314": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14448,
        14457
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1315": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x869"
    },
    "1318": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        14428,
        14458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1319": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14428,
        14458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "SUB"
    },
    "1328": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1329": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1330": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "AND",
      "path": "0"
    },
    "1331": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14418
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1333": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1335": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1336": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1338": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1339": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1340": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1341": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1343": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1344": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1345": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1346": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1347": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14458
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1348": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1349": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14458
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1350": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14458
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1351": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 9
    },
    "1352": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1353": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1354": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1355": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1357": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1358": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1359": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14410,
        14425
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1360": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1362": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "AND",
      "path": "0"
    },
    "1363": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1364": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1397": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1398": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1399": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1400": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SUB",
      "path": "0"
    },
    "1402": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "ADD",
      "path": "0"
    },
    "1403": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1404": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14473,
        14506
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1405": {
      "op": "POP"
    },
    "1406": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14523,
        14527
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "1408": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1409": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "POP",
      "path": "0"
    },
    "1411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "POP",
      "path": "0"
    },
    "1412": {
      "fn": "ERC20.transferFrom",
      "offset": [
        14058,
        14534
      ],
      "op": "POP",
      "path": "0"
    },
    "1413": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        14058,
        14534
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1414": {
      "offset": [
        12785,
        12806
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1415": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1417": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1420": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "AND",
      "path": "0"
    },
    "1421": {
      "fn": "ERC20.transferFrom",
      "offset": [
        12785,
        12806
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1422": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        12785,
        12806
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1423": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1424": {
      "fn": "ERC20.getSummary",
      "offset": [
        14652,
        14664
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x5"
    },
    "1426": {
      "fn": "ERC20.getSummary",
      "offset": [
        14652,
        14664
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1427": {
      "fn": "ERC20.getSummary",
      "offset": [
        14638,
        14644
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1429": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1430": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1431": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1433": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1434": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1435": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1441": {
      "op": "NOT"
    },
    "1442": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1445": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1447": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1448": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "AND",
      "path": "0"
    },
    "1449": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1450": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MUL",
      "path": "0"
    },
    "1451": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1452": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1453": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1454": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "AND",
      "path": "0"
    },
    "1455": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1456": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1457": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DIV",
      "path": "0"
    },
    "1458": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1459": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1460": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1461": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1462": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1463": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DIV",
      "path": "0"
    },
    "1464": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1465": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MUL",
      "path": "0"
    },
    "1466": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1467": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1468": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1469": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1470": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1471": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1472": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1473": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1474": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1476": {
      "fn": "ERC20.getSummary",
      "offset": [
        14582,
        14595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1478": {
      "fn": "ERC20.getSummary",
      "offset": [
        14582,
        14595
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1479": {
      "fn": "ERC20.getSummary",
      "offset": [
        14582,
        14595
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1480": {
      "fn": "ERC20.getSummary",
      "offset": [
        14582,
        14595
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1481": {
      "fn": "ERC20.getSummary",
      "offset": [
        14611,
        14618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1483": {
      "fn": "ERC20.getSummary",
      "offset": [
        14611,
        14618
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1484": {
      "fn": "ERC20.getSummary",
      "offset": [
        14638,
        14644
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1485": {
      "fn": "ERC20.getSummary",
      "offset": [
        14638,
        14644
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1486": {
      "fn": "ERC20.getSummary",
      "offset": [
        14646,
        14650
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1488": {
      "fn": "ERC20.getSummary",
      "offset": [
        14646,
        14650
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1489": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1490": {
      "fn": "ERC20.getSummary",
      "offset": [
        14638,
        14644
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1491": {
      "fn": "ERC20.getSummary",
      "offset": [
        14638,
        14644
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1492": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1493": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1494": {
      "fn": "ERC20.getSummary",
      "offset": [
        14638,
        14644
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1495": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1496": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1497": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1498": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x624"
    },
    "1501": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1502": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1503": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1505": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "LT",
      "path": "0"
    },
    "1506": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F9"
    },
    "1509": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1510": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1513": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1514": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1515": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1516": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DIV",
      "path": "0"
    },
    "1517": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MUL",
      "path": "0"
    },
    "1518": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1519": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1520": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1521": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1523": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1524": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1525": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x624"
    },
    "1528": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1529": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1530": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1531": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1532": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1533": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1534": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1536": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1537": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1539": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1541": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1542": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1543": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1544": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1545": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1546": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1547": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1548": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1549": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1551": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1552": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1553": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1555": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1556": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1557": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1558": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "GT",
      "path": "0"
    },
    "1559": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x607"
    },
    "1562": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1563": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1564": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1565": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SUB",
      "path": "0"
    },
    "1566": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1568": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "AND",
      "path": "0"
    },
    "1569": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1570": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1571": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1572": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1573": {
      "op": "POP"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1576": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1577": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1579": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1580": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1581": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1583": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1585": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1587": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1588": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "AND",
      "path": "0"
    },
    "1589": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1590": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1593": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MUL",
      "path": "0"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1596": {
      "op": "NOT"
    },
    "1597": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1598": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1599": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1600": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "AND",
      "path": "0"
    },
    "1601": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1602": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1603": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1604": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DIV",
      "path": "0"
    },
    "1605": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1607": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1608": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1609": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1610": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1611": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DIV",
      "path": "0"
    },
    "1612": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1613": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MUL",
      "path": "0"
    },
    "1614": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1615": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1616": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1617": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1618": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1619": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1620": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1621": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1622": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1623": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1624": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1625": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP9",
      "path": "0"
    },
    "1626": {
      "op": "POP"
    },
    "1627": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1628": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1633": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1634": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1637": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1638": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1639": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1640": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B2"
    },
    "1643": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1644": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1645": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1647": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "LT",
      "path": "0"
    },
    "1648": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "1651": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1652": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1655": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1656": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1657": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1658": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DIV",
      "path": "0"
    },
    "1659": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MUL",
      "path": "0"
    },
    "1660": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1661": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1662": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1663": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1665": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1666": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1667": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B2"
    },
    "1670": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1671": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1673": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1674": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1675": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1676": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1678": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1679": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1681": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1683": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1684": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1685": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1686": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1687": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1688": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1689": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1690": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1691": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1693": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1694": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1695": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1697": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1698": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1699": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1700": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "GT",
      "path": "0"
    },
    "1701": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x695"
    },
    "1704": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1705": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1706": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1707": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SUB",
      "path": "0"
    },
    "1708": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1710": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "AND",
      "path": "0"
    },
    "1711": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1712": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "ADD",
      "path": "0"
    },
    "1713": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1714": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1715": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1716": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1717": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1718": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1719": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1720": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1721": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1722": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1723": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1724": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1725": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1726": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1727": {
      "fn": "ERC20.getSummary",
      "offset": [
        14630,
        14665
      ],
      "op": "POP",
      "path": "0"
    },
    "1728": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1729": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1730": {
      "fn": "ERC20.getSummary",
      "offset": [
        14540,
        14672
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1731": {
      "fn": "ERC20.getSummary",
      "jump": "o",
      "offset": [
        14540,
        14672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1732": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13247,
        13357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "op": "SUB"
    },
    "1741": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "AND",
      "path": "0",
      "statement": 12
    },
    "1742": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13307,
        13311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1744": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1745": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1746": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1747": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1751": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1752": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1754": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1755": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1756": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1757": {
      "fn": "ERC20.balanceOf",
      "offset": [
        13330,
        13350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1758": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        13247,
        13357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1759": {
      "offset": [
        12759,
        12779
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1760": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1762": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1763": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1764": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1766": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1767": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1768": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1770": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1772": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1773": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "AND",
      "path": "0"
    },
    "1774": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1775": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1778": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MUL",
      "path": "0"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1781": {
      "op": "NOT"
    },
    "1782": {
      "offset": [
        12759,
        12779
      ],
      "op": "ADD",
      "path": "0"
    },
    "1783": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1784": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1785": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "AND",
      "path": "0"
    },
    "1786": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1787": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1788": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DIV",
      "path": "0"
    },
    "1789": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1791": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1792": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ADD",
      "path": "0"
    },
    "1793": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1794": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DIV",
      "path": "0"
    },
    "1796": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1797": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MUL",
      "path": "0"
    },
    "1798": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1799": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ADD",
      "path": "0"
    },
    "1800": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1801": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ADD",
      "path": "0"
    },
    "1802": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1803": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1804": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1805": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1806": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1807": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1808": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1809": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1810": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1811": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ADD",
      "path": "0"
    },
    "1812": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1813": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1814": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1815": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1816": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "1819": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1820": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1821": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1823": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "LT",
      "path": "0"
    },
    "1824": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39E"
    },
    "1827": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1828": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1831": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1832": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1833": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1834": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DIV",
      "path": "0"
    },
    "1835": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MUL",
      "path": "0"
    },
    "1836": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1837": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1838": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1839": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1841": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "ADD",
      "path": "0"
    },
    "1842": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1843": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "1846": {
      "fn": "ERC20.balanceOf",
      "offset": [
        12759,
        12779
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1847": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1848": {
      "fn": "ERC20.transfer",
      "offset": [
        13477,
        13487
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 13
    },
    "1849": {
      "fn": "ERC20.transfer",
      "offset": [
        13431,
        13435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1851": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1852": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1853": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1854": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1856": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1857": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1858": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1859": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1861": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1862": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1863": {
      "fn": "ERC20.transfer",
      "offset": [
        13468,
        13488
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1864": {
      "fn": "ERC20.transfer",
      "offset": [
        13455,
        13488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1865": {
      "fn": "ERC20.transfer",
      "offset": [
        13455,
        13488
      ],
      "op": "GT",
      "path": "0"
    },
    "1866": {
      "branch": 24,
      "fn": "ERC20.transfer",
      "offset": [
        13455,
        13488
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1867": {
      "fn": "ERC20.transfer",
      "offset": [
        13447,
        13489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x753"
    },
    "1870": {
      "branch": 24,
      "fn": "ERC20.transfer",
      "offset": [
        13447,
        13489
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1871": {
      "fn": "ERC20.transfer",
      "offset": [
        13447,
        13489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1873": {
      "fn": "ERC20.transfer",
      "offset": [
        13447,
        13489
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1874": {
      "fn": "ERC20.transfer",
      "offset": [
        13447,
        13489
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1875": {
      "fn": "ERC20.transfer",
      "offset": [
        13447,
        13489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1876": {
      "fn": "ERC20.transfer",
      "offset": [
        13531,
        13541
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "1877": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1879": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1880": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1881": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1882": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1884": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1885": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1886": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1887": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1889": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1890": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1891": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13542
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1892": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76D"
    },
    "1895": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1896": {
      "fn": "ERC20.transfer",
      "offset": [
        13547,
        13556
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1897": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x820"
    },
    "1900": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        13522,
        13557
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1901": {
      "fn": "ERC20.transfer",
      "offset": [
        13522,
        13557
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1902": {
      "fn": "ERC20.transfer",
      "offset": [
        13508,
        13518
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1903": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1905": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1906": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1907": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1908": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1910": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1911": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1912": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1913": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1915": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1916": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1917": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13519
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1918": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13557
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1919": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1920": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13557
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1921": {
      "fn": "ERC20.transfer",
      "offset": [
        13499,
        13557
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1928": {
      "op": "SHL"
    },
    "1929": {
      "op": "SUB"
    },
    "1930": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13606
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 15
    },
    "1931": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13606
      ],
      "op": "AND",
      "path": "0"
    },
    "1932": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13606
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1933": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1934": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13606
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1935": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13606
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1936": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x799"
    },
    "1939": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1940": {
      "fn": "ERC20.transfer",
      "offset": [
        13611,
        13620
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1941": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13610
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x869"
    },
    "1944": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        13588,
        13621
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1945": {
      "fn": "ERC20.transfer",
      "offset": [
        13588,
        13621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1955": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "AND",
      "path": "0"
    },
    "1956": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1958": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1959": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1960": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1961": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1963": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1964": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1965": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1966": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1968": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1969": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1970": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1971": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1972": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13621
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1973": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1974": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13621
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1975": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13621
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1976": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 16
    },
    "1977": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1978": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1979": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1980": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1981": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1982": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1983": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1984": {
      "fn": "ERC20.transfer",
      "offset": [
        13567,
        13585
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1985": {
      "fn": "ERC20.transfer",
      "offset": [
        13645,
        13655
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1986": {
      "fn": "ERC20.transfer",
      "offset": [
        13645,
        13655
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1987": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2020": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2021": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2022": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2023": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SUB",
      "path": "0"
    },
    "2024": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2025": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2026": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "ADD",
      "path": "0"
    },
    "2027": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2028": {
      "fn": "ERC20.transfer",
      "offset": [
        13636,
        13677
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "fn": "ERC20.transfer",
      "offset": [
        13694,
        13698
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "2032": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2033": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2034": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "POP",
      "path": "0"
    },
    "2035": {
      "fn": "ERC20.transfer",
      "offset": [
        13363,
        13705
      ],
      "op": "POP",
      "path": "0"
    },
    "2036": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        13363,
        13705
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2037": {
      "fn": "ERC20.allowance",
      "offset": [
        13925,
        14052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "op": "SUB"
    },
    "2046": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 18
    },
    "2047": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2048": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "AND",
      "path": "0"
    },
    "2049": {
      "fn": "ERC20.allowance",
      "offset": [
        13998,
        14002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2051": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2052": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2053": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2054": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2056": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2058": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2060": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2061": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2063": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2064": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2065": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14035
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2066": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2067": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2068": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2069": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "AND",
      "path": "0"
    },
    "2070": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2071": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2072": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2073": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2074": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2075": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2076": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2077": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2078": {
      "fn": "ERC20.allowance",
      "offset": [
        14021,
        14045
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2079": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        13925,
        14052
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2080": {
      "fn": "SafeMath.sub",
      "offset": [
        8529,
        8663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2081": {
      "fn": "SafeMath.sub",
      "offset": [
        8587,
        8594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2083": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x862"
    },
    "2086": {
      "fn": "SafeMath.sub",
      "offset": [
        8617,
        8618
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2087": {
      "fn": "SafeMath.sub",
      "offset": [
        8620,
        8621
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2088": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2090": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2091": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2092": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2094": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "ADD",
      "path": "0"
    },
    "2095": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2097": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2098": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2099": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "2101": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2102": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2103": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2105": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "ADD",
      "path": "0"
    },
    "2106": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2139": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2140": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2141": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "POP",
      "path": "0"
    },
    "2142": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8616
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C3"
    },
    "2145": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        8613,
        8656
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2146": {
      "fn": "SafeMath.sub",
      "offset": [
        8613,
        8656
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2147": {
      "fn": "SafeMath.sub",
      "offset": [
        8606,
        8656
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2148": {
      "fn": "SafeMath.sub",
      "offset": [
        8529,
        8663
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2149": {
      "op": "POP"
    },
    "2150": {
      "op": "POP"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        8529,
        8663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2153": {
      "fn": "SafeMath.add",
      "offset": [
        8089,
        8265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2154": {
      "fn": "SafeMath.add",
      "offset": [
        8147,
        8154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2156": {
      "fn": "SafeMath.add",
      "offset": [
        8178,
        8183
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2157": {
      "fn": "SafeMath.add",
      "offset": [
        8178,
        8183
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2158": {
      "fn": "SafeMath.add",
      "offset": [
        8178,
        8183
      ],
      "op": "ADD",
      "path": "0"
    },
    "2159": {
      "fn": "SafeMath.add",
      "offset": [
        8201,
        8207
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 20
    },
    "2160": {
      "fn": "SafeMath.add",
      "offset": [
        8201,
        8207
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2161": {
      "fn": "SafeMath.add",
      "offset": [
        8201,
        8207
      ],
      "op": "LT",
      "path": "0"
    },
    "2162": {
      "branch": 25,
      "fn": "SafeMath.add",
      "offset": [
        8201,
        8207
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2163": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x862"
    },
    "2166": {
      "branch": 25,
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2167": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2169": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2170": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2177": {
      "op": "SHL"
    },
    "2178": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2179": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2180": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2182": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2184": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2185": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "ADD",
      "path": "0"
    },
    "2186": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2187": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "2189": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2191": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2192": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "ADD",
      "path": "0"
    },
    "2193": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2194": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2227": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2229": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2230": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "ADD",
      "path": "0"
    },
    "2231": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2232": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2233": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2234": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2235": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2236": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2237": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "SUB",
      "path": "0"
    },
    "2238": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2240": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "ADD",
      "path": "0"
    },
    "2241": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2242": {
      "fn": "SafeMath.add",
      "offset": [
        8193,
        8239
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2243": {
      "fn": "SafeMath.sub",
      "offset": [
        8947,
        9134
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2244": {
      "fn": "SafeMath.sub",
      "offset": [
        9033,
        9040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2246": {
      "fn": "SafeMath.sub",
      "offset": [
        9068,
        9080
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 21
    },
    "2247": {
      "fn": "SafeMath.sub",
      "offset": [
        9060,
        9066
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2248": {
      "fn": "SafeMath.sub",
      "offset": [
        9060,
        9066
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2249": {
      "fn": "SafeMath.sub",
      "offset": [
        9060,
        9066
      ],
      "op": "GT",
      "path": "0"
    },
    "2250": {
      "branch": 26,
      "fn": "SafeMath.sub",
      "offset": [
        9060,
        9066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2251": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x952"
    },
    "2254": {
      "branch": 26,
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2255": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2257": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2266": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2267": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2269": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2270": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2271": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2272": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2274": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2275": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2276": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2277": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SUB",
      "path": "0"
    },
    "2278": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2279": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2280": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2281": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2282": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2283": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2284": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2285": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2286": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2288": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2289": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2290": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2291": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2292": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2293": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2294": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2296": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2297": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2298": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2299": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2300": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2301": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2303": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2304": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2305": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2306": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "LT",
      "path": "0"
    },
    "2307": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2308": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x917"
    },
    "2311": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2312": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2313": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2314": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2315": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2316": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2317": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2318": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2319": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2320": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2322": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2323": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FF"
    },
    "2326": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2327": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2328": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2329": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2330": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2331": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2332": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2333": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2334": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2335": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2336": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2337": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2338": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2340": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "AND",
      "path": "0"
    },
    "2341": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2342": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2343": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x944"
    },
    "2346": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2347": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2348": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2349": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SUB",
      "path": "0"
    },
    "2350": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2351": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2352": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2354": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2355": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2357": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SUB",
      "path": "0"
    },
    "2358": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2361": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "EXP",
      "path": "0"
    },
    "2362": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SUB",
      "path": "0"
    },
    "2363": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "NOT",
      "path": "0"
    },
    "2364": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "AND",
      "path": "0"
    },
    "2365": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2366": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2367": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2369": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "ADD",
      "path": "0"
    },
    "2370": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2371": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2372": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2373": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2374": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2375": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2376": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2377": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "POP",
      "path": "0"
    },
    "2378": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2380": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2381": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2382": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2383": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SUB",
      "path": "0"
    },
    "2384": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2385": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2386": {
      "fn": "SafeMath.sub",
      "offset": [
        9052,
        9081
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "fn": "SafeMath.sub",
      "offset": [
        9103,
        9108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2391": {
      "fn": "SafeMath.sub",
      "offset": [
        9103,
        9108
      ],
      "op": "SUB",
      "path": "0"
    },
    "2392": {
      "fn": "SafeMath.sub",
      "offset": [
        9103,
        9108
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2393": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        8947,
        9134
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "f6ed89813061f1912d2811f0cddf4b1f7d3f9d2f",
  "source": "pragma solidity ^0.6.0;\n\n\ncontract OptionExchangeFactory {\n    address[] deployedOptions;\n    \n    function deployOption(\n        //address _payToken,\n        address _sellToken,\n        //address _tokenFeed\n        string memory sellTokenSymbol\n        //string memory buyTokenSymbol\n        ) public {\n        OptionExchange newOption = new OptionExchange(msg.sender,0xD92E713d051C37EbB2561803a3b5FBAbc4962431,_sellToken,sellTokenSymbol,\"USDT\");\n        deployedOptions.push(address(newOption));\n    }\n    \n        \n    function getDeployedOptions() public view returns(address[] memory) {\n        return deployedOptions;\n    }\n    \n}\n\n\n//TEHTER 0xd92e713d051c37ebb2561803a3b5fbabc4962431\n// DROGO: 0x19AE1748278EF399c18188b7F06e3AD66D895716\n//LINK :0x01BE23585060835E02B77ef475b0Cc51aA1e0709\n//LINK TOKEN FEED:0x6292aA9a6650aE14fbf974E5029f36F95a1848Fd\n\ncontract OptionExchange {\n    using SafeMath for uint;\n\n    //AggregatorV3Interface internal linkFeed;\n    bytes32 sellHash;\n    bytes32 buyHash;\n    \n    LinkTokenInterface internal payToken;\n    LinkTokenInterface internal sellToken;\n\n    address public payTokenAddress;\n    address public sellTokenAddress;\n    \n    string public sellTokenSymbol;\n    string public buyTokenSymbol;\n\n    address public owner;\n    uint public exerciseVal;\n    \n    address payable contractAddress;\n    \n    //Option saved into a struct\n    \n    struct option {\n        uint strike; //Price in USD (18 decimal places) option allows buyer to purchase tokens at\n        uint premium; //Fee in contract token that option writer charges\n        uint expiry; //Unix timestamp of expiration time\n        uint amount; //Amount of tokens the option contract is for\n        bool exercised; //Has option been exercised\n        bool canceled; //Has option been canceled\n        //uint id; //Unique ID of option, also array index\n        address payable writer; //Issuer of option\n        address payable buyer; //Buyer of option\n    }\n    \n    option public TokenOpts;\n    \n    enum State {Deployed, Available,Sold}\n    State public OptionState;\n    \n    //constructor(address payToken, address sellToken) public {\n    constructor(\n        address _owner,\n        address _payTokenAddress,\n        address _sellTokenAddress,\n        string memory _sellTokenSymbol,\n        string memory _buyTokenSymbol\n        ) public {\n            OptionState = State.Deployed;\n            owner = _owner;\n            payTokenAddress = _payTokenAddress;\n            sellTokenAddress = _sellTokenAddress;\n            sellTokenSymbol = _sellTokenSymbol;\n            buyTokenSymbol = _buyTokenSymbol;\n            sellHash = keccak256(abi.encodePacked(sellTokenSymbol));\n            buyHash = keccak256(abi.encodePacked(buyTokenSymbol));\n            //TokenFeed = AggregatorV3Interface(_tokenFeed);\n            payToken = LinkTokenInterface(payTokenAddress);\n            sellToken = LinkTokenInterface(sellTokenAddress);\n        \n            contractAddress = payable(address(this));\n\n    }\n    \n    //function OptionContract() {}\n    \n    modifier onlyOwner()  {\n        require(msg.sender== owner);\n        _;\n    }\n\n \n    // Write the call option\n    \n    function writeOption( uint strike, uint premium, uint expiry, uint tokenAmount) public onlyOwner payable {\n        require(OptionState == State.Deployed);\n        uint tokenDecimals = sellToken.decimals();\n        require(sellToken.transfer(contractAddress,tokenAmount.mul(10**tokenDecimals)),\"Incorrect Amount of Token supplied\"); // In this alternative you need to use the instructions in this website \"https://blog.chain.link/defi-call-option-exchange-in-solidity/\"\n        uint buyTokenDecimals = payToken.decimals();\n        TokenOpts = option(strike.mul(10**buyTokenDecimals), premium.mul(10**buyTokenDecimals), expiry, tokenAmount.mul(10**tokenDecimals), false, false, msg.sender, address(0));\n        OptionState = State.Available;\n    }\n    \n    // Purchase a call option\n    \n    function buyOption() public payable {\n        require(OptionState ==State.Available);\n        require(payToken.transferFrom(msg.sender,owner, TokenOpts.premium), \"Incorrect amount of USDT sent for premium\");\n        TokenOpts.buyer = msg.sender;\n        OptionState = State.Sold;\n        \n    }\n    \n\n    // Exercising the option\n    \n    function exercise() public payable {\n        require(OptionState == State.Sold);\n        require(TokenOpts.buyer == msg.sender,\"You are not the owner of the Option\");\n        require(!TokenOpts.exercised, \"Option already exercised expired\");\n        require(TokenOpts.expiry >now,\"Option has expired\");\n        uint selltokenDecimals = sellToken.decimals();\n        uint buyTokenDecimals = payToken.decimals();\n        exerciseVal = TokenOpts.strike*TokenOpts.amount/(10**selltokenDecimals);\n        \n        //require(sellToken.transferFrom(msg.sender,TokenOpts.writer, exerciseVal); \"Incorrect LINK amount sent to exercise\");\n        require(payToken.transferFrom(msg.sender,contractAddress, TokenOpts.strike), \"Error: buyer has not paid\");\n        sellToken.transferFrom(contractAddress,msg.sender,exerciseVal);\n        payToken.transferFrom(contractAddress,owner,TokenOpts.strike);\n        \n        TokenOpts.exercised = true;   \n    }\n\n\n    function getSummary() public view returns(address,address,address,string memory,string memory) {\n        return(sellTokenAddress,payTokenAddress,owner,buyTokenSymbol,sellTokenSymbol);\n    }\n    \n    function getShowSummary() public view returns(State,uint,uint,uint,uint,bool,bool,address, address,uint) {\n        return(\n            \n            OptionState,\n            TokenOpts.strike,\n            TokenOpts.premium,\n            TokenOpts.expiry,\n            TokenOpts.amount,\n            TokenOpts.exercised,\n            TokenOpts.canceled,\n            TokenOpts.writer,\n            TokenOpts.buyer,\n            exerciseVal);\n            \n\n    }\n\n} \n\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string memory tokenName);\n  function symbol() external view returns (string memory tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n\n\ncontract ERC20 {\n    \n    using SafeMath for uint256;\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\n    event Transfer(address indexed from, address indexed to, uint tokens);\n    mapping(address => uint256) balances;\n    mapping(address => mapping (address => uint256)) allowed;\n    string public symbol;\n    uint8 public decimals;\n    string public  name;\n    uint256 private _totalSupply;\n\n    constructor(uint8 _decimals, string memory _symbol, string memory _name, uint256 _total_supply) public{\n        decimals = _decimals;\n        symbol = _symbol;\n        name = _name;\n        _totalSupply = _total_supply;\n        balances[msg.sender] = _totalSupply;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }    \n\n    function balanceOf(address tokenOwner) public view returns (uint) {\n        return balances[tokenOwner];\n    }\n\n    function transfer(address receiver, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[msg.sender]);\n        balances[msg.sender] = balances[msg.sender].sub(numTokens);\n        balances[receiver] = balances[receiver].add(numTokens);\n        emit Transfer(msg.sender, receiver, numTokens);\n        return true;\n    }\n\n    function approve(address delegate, uint numTokens) public returns (bool) {\n        allowed[msg.sender][delegate] = numTokens;\n        emit Approval(msg.sender, delegate, numTokens);\n        return true;\n    }\n\n    function allowance(address owner, address delegate) public view returns (uint) {\n        return allowed[owner][delegate];\n    }\n\n    function transferFrom(address owner, address buyer, uint numTokens) public returns (bool) {\n        require(numTokens <= balances[owner]);    \n        require(numTokens <= allowed[owner][msg.sender]);\n    \n        balances[owner] = balances[owner].sub(numTokens);\n        allowed[owner][msg.sender] = allowed[owner][msg.sender].sub(numTokens);\n        balances[buyer] = balances[buyer].add(numTokens);\n        emit Transfer(owner, buyer, numTokens);\n        return true;\n    }\n\n    function getSummary() public view returns(string memory,string memory, uint256) {\n        return (symbol, name, _totalSupply);\n    }\n}\n\n\n",
  "sourceMap": "12436:2238:0:-:0;;;12872:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12872:270:0;;;;;;;;;;-1:-1:-1;12872:270:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12872:270:0;;;;;;;;;;-1:-1:-1;12872:270:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12872:270:0;;;;;;;12984:8;:20;;-1:-1:-1;;12984:20:0;;;;;;;13014:16;;12872:270;;-1:-1:-1;13014:16:0;;-1:-1:-1;13014:6:0;;:16;;;;:::i;:::-;-1:-1:-1;13040:12:0;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;13062:12:0;:28;;;13109:10;13100:8;:20;;;;;;;;;;:35;-1:-1:-1;12436:2238:0;;-1:-1:-1;;12436:2238:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12436:2238:0;;;-1:-1:-1;12436:2238:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/OptionExchange.sol",
  "type": "contract"
}